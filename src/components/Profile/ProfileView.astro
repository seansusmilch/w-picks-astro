---
import { UserAvatar } from '@/components/Profile/UserAvatar';
import { UserPicksTable } from '@/components/Profile/UserPicksTable';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import type { PickType, UserType, StatType } from '@/lib/definitions';
import moment from 'moment';

interface Props {
  user: UserType & { avatar_url: string };
  picks: PickType[];
  stats?: StatType;
}

const { user, picks, stats } = Astro.props;

const updated = stats?.updated ? moment(stats.updated).fromNow() : 'now';

const winPicks = stats?.win_picks || 0;
const losePicks = stats?.lose_picks || 0;
const progressValue = (winPicks / stats?.total_picks) * 100;
---

<div class='flex flex-col items-center gap-4'>
  <div
    class='flex flex-col w-full max-w-md lg:max-w-xl border rounded-lg shadow-lg p-4 gap-4'
  >
    <div class='flex flex-row gap-6'>
      <UserAvatar
        client:load
        className='h-20 w-20 lg:h-36 lg:w-36'
        avatar_url={user.avatar_url}
      />
      <div class='flex flex-col items-start gap-4 w-full'>
        <div class='flex flex-row justify-between w-full'>
          <h1
            class='text-2xl font-bold bg-gradient-to-r from-cyan-500 to-purple-500 inline-block text-transparent bg-clip-text'
          >
            @{user.username}
          </h1>
          {
            user.id === Astro.locals.user?.record.id ? (
              <a class='hidden lg:block' href='/profile/edit'>
                <Button client:load>Edit Profile</Button>
              </a>
            ) : null
          }
        </div>
        <pre
          class='text-xs lg:text-md text-gray-500 break-words max-w-60 lg:max-w-96 overflow-clip'
          set:text={user.bio}
        />
      </div>
    </div>
    {
      user.id === Astro.locals.user?.record.id ? (
        <a class='w-full lg:hidden' href='/profile/edit'>
          <Button client:load className='w-full'>
            Edit Profile
          </Button>
        </a>
      ) : null
    }
  </div>

  <div
    class='flex flex-col w-full max-w-md lg:max-w-xl border rounded-lg shadow-lg p-4 gap-4'
  >
    <div class='flex justify-between items-center'>
      <h2 class='text-xl font-bold'>User Stats</h2>
      <p class='text-sm'>{updated}</p>
    </div>

    <div class='flex flex-row justify-around'>
      <div class='flex flex-col items-center'>
        <span class='text-2xl font-bold'>{stats?.win_picks || 0}</span>
        <span class='text-sm'>W Picks</span>
      </div>
      <div class='flex flex-col items-center'>
        <span class='text-2xl font-bold'>{stats?.lose_picks || 0}</span>
        <span class='text-sm'>L Picks</span>
      </div>
      <div class='flex flex-col items-center'>
        <span class='text-2xl font-bold'>
          {stats?.win_loss_ratio.toFixed(2) || 0}
        </span>
        <span class='text-sm'>W/L Ratio</span>
      </div>
      <div class='flex flex-col items-center'>
        <span class='text-2xl font-bold'>{stats?.win_pick_rate || 0}%</span>
        <span class='text-sm'>W %</span>
      </div>
    </div>
    <div>
      <Progress client:load value={progressValue} />
    </div>
  </div>

  <div
    class='flex flex-col w-full max-w-md lg:max-w-xl border rounded-lg shadow-lg p-4 gap-4'
  >
    <h2 class='text-xl font-bold'>Pick History</h2>
    <UserPicksTable picks={picks} defaultTab='live' client:load />
  </div>
</div>
